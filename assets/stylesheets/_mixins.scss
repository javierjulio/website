@function compact($var-1, $var-2: false, $var-3: false, $var-4: false,
                  $var-5: false, $var-6: false, $var-7: false, $var-8: false,
                  $var-9: false, $var-10: false) {
  $full: $var-1;
  $vars: $var-2, $var-3, $var-4, $var-5, $var-6, $var-7, $var-8, $var-9, $var-10;
  
  @each $var in $vars {
    @if $var {
      $full: $full, $var;
    }
  }
  
  @return $full;
}

@mixin box-shadow($shadow-1, $shadow-2: false, $shadow-3: false, $shadow-4: false) {
  $full: compact($shadow-1, $shadow-2, $shadow-3, $shadow-4);
  -webkit-box-shadow: $full;
     -moz-box-shadow: $full;
          box-shadow: $full;
}

/* When setting box-sizing: border-box; when you apply a border and padding 
 * to that element that value combined is part of the width set. So if you 
 * have a 1px border, 5px padding and width of 100px, you're rendered width 
 * remains at 100px but the default setting (content-box) the border and 
 * padding are applied on top of the width so the actual rendered width in 
 * that example would be 112px (1px + 1px + 5px + 5px).
 * http://css-tricks.com/box-sizing/
 */
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

@mixin opacity($opacity) {
  filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
  opacity: $opacity;
}

@mixin transition($transition-1, $transition-2: false, $transition-3: false, $transition-4: false) {
  $full: compact($transition-1, $transition-2, $transition-3, $transition-4);
  -webkit-transition: $full;
     -moz-transition: $full;
      -ms-transition: $full;
       -o-transition: $full;
          transition: $full;
}
